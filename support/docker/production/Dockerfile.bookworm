FROM node:18-bookworm-slim

ARG ALREADY_BUILT=0

# Install dependencies
RUN apt update \
 && apt install -y --no-install-recommends openssl ffmpeg python3 python3-pip ca-certificates gnupg gosu build-essential curl git \
 && gosu nobody true \
 && rm /var/lib/apt/lists/* -fR

# Add peertube user
RUN groupadd -r peertube \
    && useradd -r -g peertube -m peertube

# Install PeerTube
COPY --chown=peertube:peertube . /app
WORKDIR /app

USER peertube

# Install manually client dependencies to apply our network timeout option
RUN set -e; \
  if [ "${ALREADY_BUILT}" = 0 ]; then \
      echo "Starting client dependencies installation..." && \
      cd client && yarn install --pure-lockfile --network-timeout 1200000 && cd ../ && \
      echo "Starting server dependencies installation..." && \
      yarn install --pure-lockfile --network-timeout 1200000 && \
      echo "Building application..." && \
      npm run build && \
      echo "Build completed successfully"; \
  else \
      echo "Do not build application inside Docker because of ALREADY_BUILT build argument"; \
  fi; \
  echo "Cleaning up build artifacts..." && \
  rm -rf ./node_modules ./client/node_modules ./client/.angular && \
  echo "Installing production dependencies..." && \
  NOCLIENT=1 yarn install --pure-lockfile --production --network-timeout 1200000 --network-concurrency 20

USER root

RUN mkdir /data /config
RUN chown -R peertube:peertube /data /config

ENV NODE_ENV production
ENV NODE_CONFIG_DIR /app/config:/app/support/docker/production/config:/config
ENV PEERTUBE_LOCAL_CONFIG /config

VOLUME /data
VOLUME /config

COPY ./support/docker/production/entrypoint.sh /usr/local/bin/entrypoint.sh
ENTRYPOINT [ "/usr/local/bin/entrypoint.sh" ]

# Expose API and RTMP
EXPOSE 9000 1935

# Run the application
CMD [ "node", "dist/server" ]